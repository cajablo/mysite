---
title: "test - RMarkdown Using Open Street Maps to Find Seattle Coffee Shops"
author: "Caroline Jablonicky"
date: '2019-10-03'
categories: R
featured: no
image:
  caption: ''
  focal_point: ''
  preview_only: no
lastmod: '2019-10-03T16:22:29-07:00'
projects: []
slug: test-mapping-sea-coffee-shops-osm
subtitle: ''
summary: ''
tags:
- osm
- ggplot2
- maps
authors: []
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(collapse = TRUE)
```

Seattle is well known as a coffee hub. I decided to use Open Street Maps to explore where Seattle's coffee shops are within the city, and explore how many of these shops belong to Starbucks versus more local chains.

First let's load some packages.
```{r message = FALSE}
#load packages
library(tidyverse)
library(osmdata)
library(sf)
library(ggmap)
library(knitr)
```

###Downloading Open Street Map data
Using the Open Street Map R package (*osmdata*), we can get the locations of Seattle coffee shops.  
```{r}

q <- getbb("Seattle") %>%
      opq(timeout = 25) %>%
      add_osm_feature("amenity", "cafe") %>%
      add_osm_feature("cuisine", "coffee_shop")

osm_sea_coffeeshop <- osmdata_sf(q)

sea_coffeeshop <- osm_sea_coffeeshop[["osm_points"]]

#head(sea_coffeeshop, 10) or View(sea_coffeeshop, 10) if you have RStudio
```


###Cleaning and Tidying up the data
It looks like there are a lot of coffee shops that don't have anything in the *name* column, so let's examine those rows to make sure there isn't data in another column. I'll do this by counting how many NA's there are in each column by filtering the name column for just the NA's and then counting how many NA's there are in the rest of the columns (*note* - for display purposes I just displayed the NA count for the first 5 columns).
```{r}
explore_NA_names <- sea_coffeeshop %>%
  filter(is.na(name)) %>%
  st_set_geometry(NULL) %>%
  summarize_all(funs(sum(is.na(.)))) %>%
  gather(column_name) %>%
  rename(number_NAs = value)

#print a table of all the count of NAs for all columns
explore_NA_names %>%
  head() %>%
  kable(col.names = c("Column Name", "Number of NAs"))
```

We find that of the `r sum(is.na(sea_coffeeshop$name))` rows that had NA for the *name* column, the rest of the columns only had NA's other than the osm_id column, so I think it's safe to remove those rows. That leaves us with `r length(sea_coffeeshop$name) - sum(is.na(sea_coffeeshop$name))` coffee shops in Seattle. That's a lot of coffee shops! 

Before we continue, let's do some tidying up of the data:

- Filter the *name* column to remove the rows with NA's
- Select only the relevent columns, removing the rest
- Tidy up the *name* column to remove the special characters
- Create a new column called *chain_name* which denotes which chain the shop belongs to (ie Zoka Coffee - Greenlake and Zoka Coffee - South Lake Union would both be under the chain *Zoka*, independent shops just keep their original name)


```{r hide = FALSE}
#remove rows with NA in the dataframe
sea_coffeeshop_clean <- sea_coffeeshop %>%
  filter(!is.na(name)) %>%
  select(osm_id, name) %>% #even though we aren't selecting the geometry column, b/c this is an sf object it will be automatically added to the selection
  mutate(name = str_replace(name, "Ã©|Ã¨", "e"), name = str_replace(name, "â€™", "'")) %>% #get rid of special characters in names due to apostrophe's etc 
  mutate(chain_name = if_else(str_detect(name,"Starbuck"), "Starbucks", name)) %>%
  mutate(chain_name = if_else(str_detect(chain_name, "Espresso Vivace"), "Espresso Vivace", chain_name)) %>%
  mutate(chain_name = if_else(str_detect(chain_name, "Zoka"), "Zoka", chain_name)) %>%
  mutate(chain_name = if_else(str_detect(chain_name, "Herkimer Coffee"), "Herkimer Coffee", chain_name)) %>%
  mutate(chain_name = if_else(str_detect(chain_name, "Chaco Canyon Organic"), "Chaco Canyon Organic Cafe", chain_name)) %>%
  mutate(chain_name = if_else(str_detect(chain_name, "Cherry Street Coffee"), "Cherry Street Coffee House", chain_name)) %>%
  mutate(chain_name = if_else(str_detect(chain_name, "Chocolati"), "Chocolati Cafe", chain_name)) 

```

###How Many Starbuck locations are in Seattle?
Since Seattle is the original home to Starbucks, let's see how many Starbucks and other chains are in the city. 

```{r}
sea_chains <- sea_coffeeshop_clean %>%
  st_set_geometry(NULL) %>%
  count(chain_name, sort = TRUE) %>%
  filter(n > 1) %>%
  rename(number_shops = n)

kable(sea_chains,
      col.names = c("Chain name", "Number of Shops"))
```

###Mapping Coffee Shops in Seattle
Let's download the Seattle city limits using the [City Council Districts file](https://hub.arcgis.com/datasets/5a500937601b4382bc0f6edfca3c9ca5_2237) from King County GIS Open Data Portal using the sf function *st_read()*. For GIS data available made available via an API this function is really convenient. The *st_union()* function unions the city council districts into one polygon of the Seattle city limits.
```{r warning=FALSE, message=FALSE}
seattle_limits <- st_read("https://opendata.arcgis.com/datasets/5a500937601b4382bc0f6edfca3c9ca5_2237.geojson") %>%
  st_union()

```

To create a background map for the maps, I created a bounding box from the *seattle_limits* file and then used the *get_stamenmap()* which pulls the tiles from [Stamen Design](http://maps.stamen.com/#watercolor/12/37.7706/-122.3782).

All Map tiles by Stamen Design, under CC BY 3.0. Data by OpenStreetMap, under ODbL.
```{r warning=FALSE, message=FALSE}
seattle_bbox <- as.vector(st_bbox(seattle_limits))
sea_map <- get_stamenmap(seattle_bbox, zoom = 12, maptype = "toner-background") %>% ggmap()
```

Here I created a map of all of the Starbucks in Seattle using *ggplot2*

```{r warning=FALSE, message=FALSE}
sea_starbucks <- sea_coffeeshop_clean %>%
  filter(chain_name %in% "Starbucks") %>%
  mutate(lat = unlist(map(geometry,2)),
         lon = unlist(map(geometry,1))) %>%
  st_intersection(seattle_limits)

sea_map +
  geom_point(data = sea_starbucks, 
             aes(x = lon, y = lat), 
             color = "forestgreen", 
             alpha = .6) +
  theme_minimal() +
  labs(title = "Starbucks Location in Seattle",
       caption = "Source: Open Street Map, King County GIS, Stamen Design",
       x = "",
       y = "") +
  theme(axis.text.x = element_blank(),
        axis.text.y = element_blank(),
        plot.caption = element_text(size = 7,
                                hjust = .5,
                                margin = margin(t = 0.2,
                                                b = 0,
                                                unit = "cm"),
                                color = "#939184"),
        plot.title = element_text(size = 15, hjust = 0.5)
        )

```

I also decided to create another map of all of the *independent* coffee shops in Seattle, ie not Starbucks or Peets coffee (it's possible there were some other national chains on the list that I just didn't recognize). 

```{r warning=FALSE, message=FALSE}
sea_ind_coffee <- sea_coffeeshop_clean %>%
  filter(!(chain_name %in% "Starbucks") | !(chain_name %in% "Peet")) %>%
  mutate(lat = unlist(map(geometry,2)),
         lon = unlist(map(geometry,1))) %>%
  st_intersection(seattle_limits)

sea_map +
  geom_point(data = sea_ind_coffee, 
             aes(x = lon, y = lat), 
             color = "purple", 
             alpha = .4) +
  theme_minimal() +
  #coord_sf(crs = 4269, datum = NA) +
  labs(title = "Independent Coffee Shops in Seattle",
       caption = "Source: Open Street Map, King County GIS, Stamen Design",
       x = "",
       y = "") +
  theme(axis.text.x = element_blank(),
        axis.text.y = element_blank(),
        plot.caption = element_text(size = 7,
                                hjust = .5,
                                margin = margin(t = 0.2,
                                                b = 0,
                                                unit = "cm"),
                                color = "#939184"),
        plot.title = element_text(size = 15, hjust = 0.5)
        )

```

For fun I also creaded a quick map of areas of a high density of Starbucks using *stat_density2d()* from *ggplot2*. 

```{r warning=FALSE, message = TRUE}
sea_map + stat_density2d(
    aes(x = lon, 
        y = lat, 
        fill = ..level.., 
        alpha = 1/20),
    size = 2, bins = 20, 
    data = sea_starbucks,
    geom = "polygon"
  ) +
  theme_minimal() +
  labs(title = "Density of Starbucks in Seattle",
       caption = "Source: Open Street Map, King County GIS, Stamen Design",
       x = "",
       y = "") +
  scale_fill_gradient(low = "light green", high = "forest green") +
  theme(text = element_text(color = "black"),
        panel.border = element_blank(),
        axis.text.x = element_blank(),
        axis.text.y = element_blank(),
        plot.caption = element_text(size = 7,
                                hjust = .5,
                                margin = margin(t = 0.2,
                                                b = 0,
                                                unit = "cm"),
                                color = "#939184"),
        plot.title = element_text(size = 15, hjust = 0.5)
        )
  
```
